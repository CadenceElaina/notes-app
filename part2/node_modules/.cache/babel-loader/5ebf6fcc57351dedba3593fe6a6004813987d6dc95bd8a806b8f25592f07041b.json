{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\coope\\\\OneDrive\\\\Desktop\\\\fullstackopen_notes\\\\part2\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Note from \"./components/Note\";\nimport { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = ( /* props */\n) => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  //console.log(notes)\n  const [newNote, setNewNote] = useState('a new note...');\n  const [showAll, setShowAll] = useState(true);\n\n  /*  useEffect(() => {\n     console.log('effect')\n     axios\n       .get('http://localhost:3001/notes')\n       .then(response => {\n         console.log('promise fulfilled')\n         setNotes(response.data)\n       })\n   }, []) */\n\n  const toggleImportanceOf = id => {\n    const url = `http://localhost:3001/notes/${id}`;\n    const note = notes.find(n => n.id === id);\n    const changedNote = {\n      ...note,\n      important: !note.important\n    };\n    axios.put(url, changedNote).then(response => {\n      setNotes(notes.map(n => n.id !== id ? n : response.data));\n    });\n    console.log(`importance of ${id} needs to be toggled`);\n    /*    console.log('importance of ' + id + ' needs to be toggled') */\n  };\n\n  const hook = () => {\n    console.log('effect');\n    axios.get('http://localhost:3001/notes').then(response => {\n      console.log('promise fulfilled');\n      setNotes(response.data);\n    });\n  };\n  useEffect(hook, []);\n  /*useEffect takes two parameters: \n  1. effect itself - by default, effects run after every completed render, but you can choose \n  to fire it only when certain values have changed\n  2. specifies how often the effect is run. - empty [] , then teh effect is only run along with \n  the first render of the component.\n  */\n  console.log('render', notes.length, 'notes');\n  const handleNoteChange = event => {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  };\n\n  //const { notes } = props\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      important: Math.random() < 0.5,\n      id: notes.length + 1\n    };\n    setNotes(notes.concat(noteObject));\n    setNewNote('');\n    console.log('button clicked', event.target);\n    axios.post('http://localhost:3001/notes', noteObject).then(response => {\n      setNewNote(notes.concat(response.data));\n      setNewNote('');\n      console.log(response);\n    });\n  };\n  const notesToShow = showAll ? notes : notes.filter(note => note.important /* === true */);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAll(!showAll),\n        children: [\"show \", showAll ? 'important' : 'all']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notesToShow.map(note => /*#__PURE__*/_jsxDEV(Note, {\n        note: note,\n        toggleImportance: () => toggleImportanceOf(note.id)\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNote,\n        onChange: handleNoteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"pWt+h/qwVIdF8jjamHMFP8GBojs=\");\n_c = App;\nexport default App;\n/* const Note = ({ note }) => {\n  return (\n    <li>{note.content}</li>\n  )\n}\n */\n{/*  <ul>\n        <li>{notes[0].content}</li>\n        <li>{notes[1].content}</li>\n        <li>{notes[2].content}</li>\n      </ul> */}\n{/* {notes.map(note => <li key={note.id}>{note.content}</li>)} */}\n/* import Course from \"./components/Course\"\nconst App = () => {\n  const courses = [\n    {\n      name: 'Half Stack application development',\n      id: 1,\n      parts: [\n        {\n          name: 'Fundamentals of React',\n          exercises: 10,\n          id: 1\n        },\n        {\n          name: 'Using props to pass data',\n          exercises: 7,\n          id: 2\n        },\n        {\n          name: 'State of a component',\n          exercises: 14,\n          id: 3\n        },\n        {\n          name: 'Redux',\n          exercises: 11,\n          id: 4\n        }\n      ]\n    },\n    {\n      name: 'Node.js',\n      id: 2,\n      parts: [\n        {\n          name: 'Routing',\n          exercises: 3,\n          id: 1\n        },\n        {\n          name: 'Middlewares',\n          exercises: 7,\n          id: 2\n        }\n      ]\n    }\n  ]\n\n  return (\n    <div>\n      <h1>Web development curriculum</h1>\n      {courses.map((course) => (\n        <Course key={course.id} course={course} />\n      ))}\n    </div>\n  )\n}\n\nexport default App\n */\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Note","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","notes","setNotes","newNote","setNewNote","showAll","setShowAll","toggleImportanceOf","id","url","note","find","n","changedNote","important","put","then","response","map","data","console","log","hook","get","length","handleNoteChange","event","target","value","addNote","preventDefault","noteObject","content","Math","random","concat","post","notesToShow","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","toggleImportance","onSubmit","onChange","type","_c","$RefreshReg$"],"sources":["C:/Users/coope/OneDrive/Desktop/fullstackopen_notes/part2/src/App.js"],"sourcesContent":["import Note from \"./components/Note\"\nimport { useState, useEffect } from \"react\"\nimport axios from 'axios'\n\nconst App = (/* props */) => {\n  const [notes, setNotes] = useState([])\n  //console.log(notes)\n  const [newNote, setNewNote] = useState(\n    'a new note...'\n  )\n  const [showAll, setShowAll] = useState(true)\n\n  /*  useEffect(() => {\n     console.log('effect')\n     axios\n       .get('http://localhost:3001/notes')\n       .then(response => {\n         console.log('promise fulfilled')\n         setNotes(response.data)\n       })\n   }, []) */\n\n  const toggleImportanceOf = id => {\n    const url = `http://localhost:3001/notes/${id}`\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    axios.put(url, changedNote).then(response => {\n      setNotes(notes.map(n => n.id !== id ? n : response.data))\n    })\n\n    console.log(`importance of ${id} needs to be toggled`)\n    /*    console.log('importance of ' + id + ' needs to be toggled') */\n  }\n\n  const hook = () => {\n    console.log('effect')\n    axios\n      .get('http://localhost:3001/notes')\n      .then(response => {\n        console.log('promise fulfilled')\n        setNotes(response.data)\n      })\n  }\n  useEffect(hook, [])\n  /*useEffect takes two parameters: \n  1. effect itself - by default, effects run after every completed render, but you can choose \n  to fire it only when certain values have changed\n  2. specifies how often the effect is run. - empty [] , then teh effect is only run along with \n  the first render of the component.\n  */\n  console.log('render', notes.length, 'notes')\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  //const { notes } = props\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      important: Math.random() < 0.5,\n      id: notes.length + 1,\n    }\n    setNotes(notes.concat(noteObject))\n    setNewNote('')\n    console.log('button clicked', event.target)\n\n    axios\n      .post('http://localhost:3001/notes', noteObject)\n      .then(response => {\n        setNewNote(notes.concat(response.data))\n        setNewNote('')\n        console.log(response)\n      })\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important /* === true */)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note =>\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)} />)}\n        {/*       {notes.map(note => <Note key={note.id} note={note} />)} */}\n\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default App\n/* const Note = ({ note }) => {\n  return (\n    <li>{note.content}</li>\n  )\n}\n */\n{/*  <ul>\n        <li>{notes[0].content}</li>\n        <li>{notes[1].content}</li>\n        <li>{notes[2].content}</li>\n      </ul> */}\n{/* {notes.map(note => <li key={note.id}>{note.content}</li>)} */ }\n/* import Course from \"./components/Course\"\nconst App = () => {\n  const courses = [\n    {\n      name: 'Half Stack application development',\n      id: 1,\n      parts: [\n        {\n          name: 'Fundamentals of React',\n          exercises: 10,\n          id: 1\n        },\n        {\n          name: 'Using props to pass data',\n          exercises: 7,\n          id: 2\n        },\n        {\n          name: 'State of a component',\n          exercises: 14,\n          id: 3\n        },\n        {\n          name: 'Redux',\n          exercises: 11,\n          id: 4\n        }\n      ]\n    },\n    {\n      name: 'Node.js',\n      id: 2,\n      parts: [\n        {\n          name: 'Routing',\n          exercises: 3,\n          id: 1\n        },\n        {\n          name: 'Middlewares',\n          exercises: 7,\n          id: 2\n        }\n      ]\n    }\n  ]\n\n  return (\n    <div>\n      <h1>Web development curriculum</h1>\n      {courses.map((course) => (\n        <Course key={course.id} course={course} />\n      ))}\n    </div>\n  )\n}\n\nexport default App\n */"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}